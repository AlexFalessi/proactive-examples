<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.8"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.8 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.8/schedulerjob.xsd"
    name="Visdom" projectName="Cloud Automation - Visdom"
    priority="normal"
    onTaskError="cancelJob"
     maxNumberOfExecution="1">
  <variables>
    <variable name="instance_name" value="visdom-server-1" />
  </variables>
  <description>
    <![CDATA[ Start the Visdom server in a Docker container. ]]>
  </description>
      <genericInformation>
    <info name="pca.service.type" value="platform"/>
    <info name="pca.service.description" value="A flexible tool for creating, organizing, and sharing visualizations of live, rich data"/>
    <info name="bucketName" value="Cloud-automation"/>
    <info name="pca.action.icon" value="https://avatars1.githubusercontent.com/u/16943930?s=400&amp;v=4"/>
    <info name="pca.service.name" value="Visdom"/>
    <info name="pca.action.name" value="create"/>
    <info name="Documentation" value="https://www.activeeon.com/resources/activeeon-machine-learning-visualization-with-visdom.pdf"/>
    <info name="pca.service.model" value="http://models.activeeon.com/pca/visdom"/>
    <info name="pca.action.type" value="create"/>
    <info name="pca.action.description" value="Start Visdom Server"/>
    <info name="pca.action.origin_state" value="null"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="start_visdom">
      <description>
        <![CDATA[ Start the Visdom server in a Docker container as a service (docker start). ]]>
      </description>
      <pre>
        <script>
          <code language="bash">
            <![CDATA[
export INSTANCE_ID=$(docker run -d -p 8097 -h visdom --name $variables_instance_name -w /root activeeon/visdom_server python -m visdom.server -port 8097)

docker inspect --format='{{(index (index .NetworkSettings.Ports "8097/tcp") 0).HostPort}}' $INSTANCE_ID > $variables_instance_name.host_port
]]>
          </code>
        </script>
      </pre>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Dockerized Visdom Server launched in a bash pre-script

//def hostIp = new URL('http://checkip.amazonaws.com/').getText()
//def hostIp = "10.19.197.100"

def PA_SCHEDULER_REST_URL = variables.get('PA_SCHEDULER_REST_URL') // 'http://10.19.197.100:8080/rest'
def host_ip = new URL(PA_SCHEDULER_REST_URL).getHost()
def instance_name = variables.get('instance_name')
def host_port = new File(instance_name + '.host_port').text

variables.put("endpoint", host_ip + ":" + host_port)
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="end_deployment">
      <depends>
        <task ref="start_visdom"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
resultObj={}
resultObj.id=variables.get("instance_name")
resultObj.status="RUNNING"
resultObj.endpoint=variables.get("endpoint")
result = JSON.stringify(resultObj);
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
</job>