{
  "nodeSourceName": "LocalClusterElastic",
  "nodesRecoverable": true,
  "infrastructurePluginDescriptor": {
    "pluginName": "org.ow2.proactive.resourcemanager.nodesource.infrastructure.LocalInfrastructure",
    "pluginDescription": "Deploys nodes on Resource Manager's machine",
    "configurableFields": [
      {
        "name": "credentials",
        "value": "[please put your Resource Manager credentials or upload your credentials file]",
        "meta": {
          "type": "CREDENTIAL",
          "description": "Absolute path to credentials file\nused to add the node to the Resource Manager",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "maxNodes",
        "value": "100",
        "meta": {
          "type": "NONE",
          "description": "Maximum number of nodes to\nbe deployed on Resource Manager machine",
          "dynamic": false,
          "sectionSelector": 1,
          "important": true
        }
      },
      {
        "name": "nodeTimeout",
        "value": "30000",
        "meta": {
          "type": "NONE",
          "description": "in ms. After this timeout expired\nthe node is considered to be lost",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      },
      {
        "name": "paProperties",
        "value": "",
        "meta": {
          "type": "TEXTAREAONELINE",
          "description": "Additional ProActive properties",
          "dynamic": false,
          "sectionSelector": 3,
          "important": false
        }
      }
    ],
    "defaultValues": {},
    "sectionDescriptions": {
      "1": "Deployment Configuration",
      "3": "Node Configuration"
    },
    "meta": {
      "elastic": "true"
    }
  },
  "policyPluginDescriptor": {
    "pluginName": "org.ow2.proactive.resourcemanager.nodesource.policy.DynamicPolicy",
    "pluginDescription": "Allocates as many resources as scheduler required according\nto loading factor. Releases resources smoothly.",
    "configurableFields": [
      {
        "name": "userAccessType",
        "value": "ALL",
        "meta": {
          "type": "NONE",
          "description": "ME|users=name1,name2;groups=group1,group2;tokens=t1,t2|ALL",
          "sectionSelector": 1,
          "dynamic": false,
          "important": false
        }
      },
      {
        "name": "providerAccessType",
        "value": "ALL",
        "meta": {
          "type": "NONE",
          "description": "ME|users=name1,name2;groups=group1,group2|ALL",
          "sectionSelector": 1,
          "dynamic": false,
          "important": false
        }
      },
      {
        "name": "minNodes",
        "value": "0",
        "meta": {
          "type": "NONE",
          "description": "Minimum number of nodes deployed.",
          "sectionSelector": 2,
          "dynamic": true,
          "important": true
        }
      },
      {
        "name": "maxNodes",
        "value": "4",
        "meta": {
          "type": "NONE",
          "description": "Maximum number of nodes deployed.",
          "sectionSelector": 2,
          "dynamic": true,
          "important": true
        }
      },
      {
        "name": "schedulerUrl",
        "value": "[please put the Scheduler URL]",
        "meta": {
          "type": "NONE",
          "description": "URL used to contact the scheduler (e.g. pnp://SCHEDULER_IP:PORT or pamr://4096).",
          "sectionSelector": 3,
          "dynamic": false,
          "important": false
        }
      },
      {
        "name": "schedulerCredentialsPath",
        "value": "[please put your Scheduler credentials or upload your credentials file]",
        "meta": {
          "type": "CREDENTIAL",
          "description": "Credentials used when contacting the scheduler.",
          "sectionSelector": 3,
          "dynamic": false,
          "important": false
        }
      },
      {
        "name": "schedulerConnectionTimeout",
        "value": "3000",
        "meta": {
          "type": "NONE",
          "description": "Timeout in ms to establish connection with the scheduler.",
          "sectionSelector": 3,
          "dynamic": false,
          "important": false
        }
      },
      {
        "name": "schedulerConnectionTrialsNumber",
        "value": "3",
        "meta": {
          "type": "NONE",
          "description": "Number of attempts to connect with the scheduler.",
          "sectionSelector": 3,
          "dynamic": false,
          "important": false
        }
      },
      {
        "name": "refreshTime",
        "value": "15000",
        "meta": {
          "type": "NONE",
          "description": "Refresh frequency (ms).",
          "sectionSelector": 3,
          "dynamic": true,
          "important": true
        }
      },
      {
        "name": "loadFactor",
        "value": "1.0",
        "meta": {
          "type": "NONE",
          "description": "Threshold of pending tasks that triggers the deployment of new nodes.",
          "dynamic": true,
          "sectionSelector": 4,
          "important": true
        }
      },
      {
        "name": "loadFactorRoundingUp",
        "value": "true",
        "meta": {
          "type": "CHECKBOX",
          "description": "Decides if pending tasks / loadFactor should be rounded up (true) or down (false).",
          "dynamic": true,
          "sectionSelector": 4,
          "important": true
        }
      },
      {
        "name": "initDelay",
        "value": "1000",
        "meta": {
          "type": "NONE",
          "description": "Delay to initialize the infrastructure (eg. in a scaleSet this must cover the creation of Azure's resources).",
          "sectionSelector": 4,
          "dynamic": false,
          "important": false
        }
      },
      {
        "name": "minUptime",
        "value": "30000",
        "meta": {
          "type": "NONE",
          "description": "Minimal uptime of a new free node to be candidate for deletion (ms).",
          "sectionSelector": 4,
          "dynamic": false,
          "important": true
        }
      },
      {
        "name": "globalScope",
        "value": "false",
        "meta": {
          "type": "NONE",
          "description": "Specify the scope of the policy: consider specific tasks ('false': target generic information NODESOURCENAME) or all tasks ('true': use only if a single DynamicPolicy is activated).",
          "sectionSelector": 4,
          "dynamic": true,
          "important": true
        }
      }
    ],
    "defaultValues": {},
    "sectionDescriptions": {
      "1": "Authorizations",
      "2": "Node Limits",
      "3": "Scheduler Configuration",
      "4": "Dynamic Policy Configuration"
    }
  }
}