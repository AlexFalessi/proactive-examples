<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.11" xsi:schemaLocation="urn:proactive:jobdescriptor:3.11 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.11/schedulerjob.xsd"  name="YOLO_Image_Anomaly_Detection" projectName="5. Image Analysis - Other libraries" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2" >
  <variables>
    <variable name="CONTAINER_NAME" value="ml" />
    <variable name="DOCKER_IMAGE" value="activeeon/dlm3" />
    <variable name="INPUT_IMAGE_1" value="images/normal.jpg" />
    <variable name="INPUT_IMAGE_2" value="images/anomaly.jpg" />
    <variable name="OUTPUT_IMAGE_1" value="output/predictions1.jpg" />
    <variable name="OUTPUT_IMAGE_2" value="output/predictions2.jpg" />
  </variables>
  <description>
    <![CDATA[ Perform anomaly detection of an input image (only pedestrians are supposed to be present) ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="deep-learning-workflows"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png"/>
    <info name="Documentation" value="http://activeeon.com/resources/automated-machine-learning-activeeon.pdf"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Anomaly_Det" >
      <description>
        <![CDATA[ The simplest task, ran by a cmd engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png"/>
      </genericInformation>
      <depends>
        <task ref="Preview_Input1"/>
        <task ref="Preview_Input2"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
### PROCESS IMAGE 1

# export variables_INPUT_IMAGE_1  = images/normal.jpg
# export variables_OUTPUT_IMAGE_1 = output/predictions1.jpg

n=$(curl https://api.keyvalue.xyz/3e0701bd/myKey)
mkdir -p /tmp/$n
mkdir -p /tmp/$n/output

docker exec $variables_CONTAINER_NAME /bin/bash -c "cd darknet && ./darknet detect cfg/yolo.cfg yolo.weights /root/deeplearning_demo/$variables_INPUT_IMAGE_1"
docker exec $variables_CONTAINER_NAME /bin/sh -c "cp /root/darknet/predictions.json /root/deeplearning_demo/json/predictions.json"
docker exec $variables_CONTAINER_NAME /bin/sh -c "cd deeplearning_demo && python anomaly_prediction.py -i $variables_INPUT_IMAGE_1 -o $variables_OUTPUT_IMAGE_1 -j json/predictions.json"
docker cp $variables_CONTAINER_NAME:/root/deeplearning_demo/$variables_OUTPUT_IMAGE_1 /tmp/$n/$variables_OUTPUT_IMAGE_1

### PROCESS IMAGE 2

# export variables_INPUT_IMAGE_1  = images/anomaly.jpg
# export variables_OUTPUT_IMAGE_1 = output/predictions2.jpg

docker exec $variables_CONTAINER_NAME /bin/bash -c "cd darknet && ./darknet detect cfg/yolo.cfg yolo.weights /root/deeplearning_demo/$variables_INPUT_IMAGE_2"
docker exec $variables_CONTAINER_NAME /bin/sh -c "cp /root/darknet/predictions.json /root/deeplearning_demo/json/predictions.json"
docker exec $variables_CONTAINER_NAME /bin/sh -c "cd deeplearning_demo && python anomaly_prediction.py -i $variables_INPUT_IMAGE_2 -o $variables_OUTPUT_IMAGE_2 -j json/predictions.json"
docker cp $variables_CONTAINER_NAME:/root/deeplearning_demo/$variables_OUTPUT_IMAGE_2 /tmp/$n/$variables_OUTPUT_IMAGE_2
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"></controlFlow>
      <cleaning>
        <script>
          <code language="bash">
            <![CDATA[
docker stop $variables_CONTAINER_NAME
]]>
          </code>
        </script>
      </cleaning>
    </task>
    <task name="Preview_Input1" >
      <description>
        <![CDATA[ The simplest task, ran by a groovy engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png"/>
      </genericInformation>
      <depends>
        <task ref="Download_Data"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def connection = new URL("https://api.keyvalue.xyz/3e0701bd/myKey").openConnection() as HttpURLConnection
connection.setRequestProperty('User-Agent', 'groovy')
connection.setRequestProperty('Accept', 'application/json')
def answer = connection.inputStream.text
def key = answer[0..-2]
println "key:["+key+"]"

def home = "/tmp"
def input_image = variables.get("INPUT_IMAGE_1")

image_path  = home + "/" + key + "/" + input_image

println "home: " + home 
println "input_image: " + input_image
println "image_path  : " + image_path  

def image_file = new File(image_path)
println "exists? " + image_file.exists()

result = image_file.getBytes()
resultMetadata.put("file.name", input_image)
resultMetadata.put("content.type", "image/jpg")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
    </task>
    <task name="Preview_Output1" >
      <description>
        <![CDATA[ The simplest task, ran by a groovy engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png"/>
      </genericInformation>
      <depends>
        <task ref="Anomaly_Det"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def connection = new URL("https://api.keyvalue.xyz/3e0701bd/myKey").openConnection() as HttpURLConnection
connection.setRequestProperty('User-Agent', 'groovy')
connection.setRequestProperty('Accept', 'application/json')
def answer = connection.inputStream.text
def key = answer[0..-2]
println "key:["+key+"]"

def home = "/tmp"
def output_image = variables.get("OUTPUT_IMAGE_1")

image_path  = home + "/" + key + "/" + output_image

println "home: " + home 
println "output_image: " + output_image
println "image_path  : " + image_path  

def image_file = new File(image_path)
println "exists? " + image_file.exists()

result = image_file.getBytes()
resultMetadata.put("file.name", output_image)
resultMetadata.put("content.type", "image/jpg")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
    </task>
    <task name="Download_Data" >
      <description>
        <![CDATA[ The simplest task, ran by a bash engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
echo "Updating local docker image"
docker pull $variables_DOCKER_IMAGE
export RUN_DOCKER="docker run -dit -h dlm -w /root --name=$variables_CONTAINER_NAME $variables_DOCKER_IMAGE"
echo "Checking if docker container is running"
if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "true" ]; 
then 
  echo "OK. The $variables_CONTAINER_NAME container is running!"
else 
  echo "$variables_CONTAINER_NAME container is not running."
  if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "false" ]; 
  then 
    echo "Starting it..."
    docker start $variables_CONTAINER_NAME
  else 
    echo "Running it..."
    echo $RUN_DOCKER
    $($RUN_DOCKER)
    sleep 5
  fi
  if [ $(docker inspect -f '{{.State.Running}}' $variables_CONTAINER_NAME) = "true" ]; 
  then 
    echo "OK. The $variables_CONTAINER_NAME container is running now!"
  else 
    echo "$variables_CONTAINER_NAME container is not running."
    echo "An error occurred while running the container."
    exit
  fi
fi

n=$RANDOM
echo "Random generated number: $n"
curl -X POST https://api.keyvalue.xyz/3e0701bd/myKey/$n
echo "Stored key:"
curl https://api.keyvalue.xyz/3e0701bd/myKey

docker exec $variables_CONTAINER_NAME /bin/sh -c "rm -r -f deeplearning_demo"
docker exec $variables_CONTAINER_NAME /bin/sh -c "git clone https://github.com/carolinepacheco/deeplearning_demo.git"

mkdir -p /tmp/$n/images

docker cp $variables_CONTAINER_NAME:/root/deeplearning_demo/$variables_INPUT_IMAGE_1 /tmp/$n/$variables_INPUT_IMAGE_1
docker cp $variables_CONTAINER_NAME:/root/deeplearning_demo/$variables_INPUT_IMAGE_2 /tmp/$n/$variables_INPUT_IMAGE_2
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
    </task>
    <task name="Preview_Input2" >
      <description>
        <![CDATA[ The simplest task, ran by a groovy engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png"/>
      </genericInformation>
      <depends>
        <task ref="Download_Data"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def connection = new URL("https://api.keyvalue.xyz/3e0701bd/myKey").openConnection() as HttpURLConnection
connection.setRequestProperty('User-Agent', 'groovy')
connection.setRequestProperty('Accept', 'application/json')
def answer = connection.inputStream.text
def key = answer[0..-2]
println "key:["+key+"]"

def home = "/tmp"
def input_image = variables.get("INPUT_IMAGE_2")

image_path  = home + "/" + key + "/" + input_image

println "home: " + home 
println "input_image: " + input_image
println "image_path  : " + image_path  

def image_file = new File(image_path)
println "exists? " + image_file.exists()

result = image_file.getBytes()
resultMetadata.put("file.name", input_image)
resultMetadata.put("content.type", "image/jpg")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
    </task>
    <task name="Preview_Output2" >
      <description>
        <![CDATA[ The simplest task, ran by a groovy engine. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png"/>
      </genericInformation>
      <depends>
        <task ref="Anomaly_Det"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
def connection = new URL("https://api.keyvalue.xyz/3e0701bd/myKey").openConnection() as HttpURLConnection
connection.setRequestProperty('User-Agent', 'groovy')
connection.setRequestProperty('Accept', 'application/json')
def answer = connection.inputStream.text
def key = answer[0..-2]
println "key:["+key+"]"

def home = "/tmp"
def output_image = variables.get("OUTPUT_IMAGE_2")

image_path  = home + "/" + key + "/" + output_image

println "home: " + home 
println "output_image: " + output_image
println "image_path  : " + image_path  

def image_file = new File(image_path)
println "exists? " + image_file.exists()

result = image_file.getBytes()
resultMetadata.put("file.name", output_image)
resultMetadata.put("content.type", "image/jpg")
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="none"/>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html><head><link rel="stylesheet" href="/studio/styles/studio-standalone.css"><style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:1122px;
            height:582px;
            }
        </style></head><body><div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-142px;left:-413.5px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_639" style="top: 403px; left: 493.25px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png" width="20px">&nbsp;<span class="name">Anomaly_Det</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_642" style="top: 275px; left: 422.25px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png" width="20px">&nbsp;<span class="name">Preview_Input1</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_645" style="top: 531px; left: 418.5px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png" width="20px">&nbsp;<span class="name">Preview_Output1</span></a></div><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" id="jsPlumb_1_648" style="top: 147px; left: 493.25px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png" width="20px">&nbsp;<span class="name">Download_Data</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_651" style="top: 275px; left: 564.25px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png" width="20px">&nbsp;<span class="name">Preview_Input2</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_654" style="top: 531px; left: 568px;"><a class="task-name"><img src="/automation-dashboard/styles/patterns/img/wf-icons/yolo.png" width="20px">&nbsp;<span class="name">Preview_Output2</span></a></div><svg style="position:absolute;left:463.5px;top:314.5px" width="91" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 70 88 C 80 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M64.9222,63.55423600000001 L55.26470793430339,44.693354604874095 L54.78308161443788,53.90031045835861 L45.61078239266199,54.83247299043622 L64.9222,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M64.9222,63.55423600000001 L55.26470793430339,44.693354604874095 L54.78308161443788,53.90031045835861 L45.61078239266199,54.83247299043622 L64.9222,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:533.5px;top:314.5px" width="92.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 81.5 50 71.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.248466999999998,63.55423600000001 L24.64674719433074,55.027412118727696 L15.484301552445254,54.00291718975355 L15.095428384084283,44.79157756628244 L5.248466999999998,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.248466999999998,63.55423600000001 L24.64674719433074,55.027412118727696 L15.484301552445254,54.00291718975355 L15.095428384084283,44.79157756628244 L5.248466999999998,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:463.5px;top:186.5px" width="94" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 83 50 73 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.786219749999997,63.115491500000005 L25.330078918440904,54.92784416977453 L16.186868143766937,53.74391143102374 L15.95849884946464,44.52719577600759 L5.786219749999997,63.115491500000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.786219749999997,63.115491500000005 L25.330078918440904,54.92784416977453 L16.186868143766937,53.74391143102374 L15.95849884946464,44.52719577600759 L5.786219749999997,63.115491500000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:463.5px;top:442.5px" width="91" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 88 C -10 38 80 50 70 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.077799999999998,63.55423600000001 L24.389217607338008,54.8324729904362 L15.216918385562112,53.900310458358604 L14.735292065696601,44.69335460487409 L5.077799999999998,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M5.077799999999998,63.55423600000001 L24.389217607338008,54.8324729904362 L15.216918385562112,53.900310458358604 L14.735292065696601,44.69335460487409 L5.077799999999998,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:536.5px;top:186.5px" width="89.5" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 68.5 88 C 78.5 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M63.59286700000001,63.55423600000001 L54.129950635207,44.59498459407861 L53.55361706698812,53.79649749240919 L44.37221212761619,54.6342345270905 L63.59286700000001,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M63.59286700000001,63.55423600000001 L54.129950635207,44.59498459407861 L53.55361706698812,53.79649749240919 L44.37221212761619,54.6342345270905 L63.59286700000001,63.55423600000001" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:533.5px;top:442.5px" width="101" height="89" pointer-events="none" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 80 88 C 90 38 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M73.3821925,63.115491500000005 L62.41759593693373,44.98326543122414 L62.58699162606104,54.20125355773553 L53.50335799466925,55.77846630516309 L73.3821925,63.115491500000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" d="M73.3821925,63.115491500000005 L62.41759593693373,44.98326543122414 L62.58699162606104,54.20125355773553 L53.50335799466925,55.77846630516309 L73.3821925,63.115491500000005" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 534px; top: 433px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 534px; top: 393px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 464px; top: 305px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 464px; top: 265px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 464px; top: 561px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 464px; top: 521px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 537px; top: 177px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 605.5px; top: 305px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 605.5px; top: 265px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 614px; top: 561px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 614px; top: 521px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1"
      xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div></body></html>
 ]]>
    </visualization>
  </metadata>
</job>